Asynchronous Communication
Chan

Value.TryRecv and Value.TrySend are not technically in the language.

Value.TryRecv was in the language previous to Go 1, using the v, ok = <-c syntax.

It was removed in favor of letting the ok denote whether the channel is closed.

Until Go 1.1, these were used to make up for a lack of there being a way to select
on channels. However, even now that you can select with reflect,
Value.TryRecv and Value.TrySend are still useful given how awkward doing selects
are in reflect.



==
	ok := false
	select {
	case v := <-c:
		ok = true
	default:
	}

	ok := false
	select {
	case c <- v:
		ok = true
	default:
	}

==

	v, ok := c.TryRecv()

	ok := c.TrySend(v)
